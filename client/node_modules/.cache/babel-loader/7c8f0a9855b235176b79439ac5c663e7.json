{"ast":null,"code":"import decode from \"jwt-decode\";\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem(\"id_token\");\n  }\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem(\"id_token\", idToken);\n    window.location.assign(\"/\");\n  }\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem(\"id_token\");\n    // this will reload the page and reset the state of the application\n    window.location.assign(\"/\");\n  }\n}\nconst auth = new AuthService();\nexport default auth;","map":{"version":3,"names":["decode","AuthService","getProfile","getToken","loggedIn","token","isTokenExpired","decoded","exp","Date","now","err","localStorage","getItem","login","idToken","setItem","window","location","assign","logout","removeItem","auth"],"sources":["/Users/patrickciongoli/Desktop/03-coding/01-rutgersCoding/pc-commerce-shop/pc-commerce-shop/client/src/utils/auth.js"],"sourcesContent":["import decode from \"jwt-decode\";\n\nclass AuthService {\n   getProfile() {\n      return decode(this.getToken());\n   }\n\n   loggedIn() {\n      // Checks if there is a saved token and it's still valid\n      const token = this.getToken();\n      return !!token && !this.isTokenExpired(token);\n   }\n\n   isTokenExpired(token) {\n      try {\n         const decoded = decode(token);\n         if (decoded.exp < Date.now() / 1000) {\n            return true;\n         } else return false;\n      } catch (err) {\n         return false;\n      }\n   }\n\n   getToken() {\n      // Retrieves the user token from localStorage\n      return localStorage.getItem(\"id_token\");\n   }\n\n   login(idToken) {\n      // Saves user token to localStorage\n      localStorage.setItem(\"id_token\", idToken);\n\n      window.location.assign(\"/\");\n   }\n\n   logout() {\n      // Clear user token and profile data from localStorage\n      localStorage.removeItem(\"id_token\");\n      // this will reload the page and reset the state of the application\n      window.location.assign(\"/\");\n   }\n}\n\nconst auth = new AuthService();\nexport default auth;\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,YAAY;AAE/B,MAAMC,WAAW,CAAC;EACfC,UAAUA,CAAA,EAAG;IACV,OAAOF,MAAM,CAAC,IAAI,CAACG,QAAQ,EAAE,CAAC;EACjC;EAEAC,QAAQA,CAAA,EAAG;IACR;IACA,MAAMC,KAAK,GAAG,IAAI,CAACF,QAAQ,EAAE;IAC7B,OAAO,CAAC,CAACE,KAAK,IAAI,CAAC,IAAI,CAACC,cAAc,CAACD,KAAK,CAAC;EAChD;EAEAC,cAAcA,CAACD,KAAK,EAAE;IACnB,IAAI;MACD,MAAME,OAAO,GAAGP,MAAM,CAACK,KAAK,CAAC;MAC7B,IAAIE,OAAO,CAACC,GAAG,GAAGC,IAAI,CAACC,GAAG,EAAE,GAAG,IAAI,EAAE;QAClC,OAAO,IAAI;MACd,CAAC,MAAM,OAAO,KAAK;IACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACX,OAAO,KAAK;IACf;EACH;EAEAR,QAAQA,CAAA,EAAG;IACR;IACA,OAAOS,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;EAC1C;EAEAC,KAAKA,CAACC,OAAO,EAAE;IACZ;IACAH,YAAY,CAACI,OAAO,CAAC,UAAU,EAAED,OAAO,CAAC;IAEzCE,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,GAAG,CAAC;EAC9B;EAEAC,MAAMA,CAAA,EAAG;IACN;IACAR,YAAY,CAACS,UAAU,CAAC,UAAU,CAAC;IACnC;IACAJ,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,GAAG,CAAC;EAC9B;AACH;AAEA,MAAMG,IAAI,GAAG,IAAIrB,WAAW,EAAE;AAC9B,eAAeqB,IAAI"},"metadata":{},"sourceType":"module"}